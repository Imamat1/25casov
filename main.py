#!/usr/bin/env python3
"""
–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è Replit - –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π FastAPI + React —Å–µ—Ä–≤–µ—Ä
"""

import os
import subprocess
import sys
from pathlib import Path
import uvicorn
from fastapi import FastAPI
from fastapi.staticfiles import StaticFiles
from fastapi.responses import FileResponse

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
sys.path.append(str(Path(__file__).parent / "backend"))
from backend.server import app as backend_app

# –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = FastAPI(title="–£—Ä–æ–∫–∏ –ò—Å–ª–∞–º–∞ - Full Stack")

# –ú–æ–Ω—Ç–∏—Ä—É–µ–º backend API
app.mount("/api", backend_app)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
def build_frontend():
    """–°–æ–±–∏—Ä–∞–µ—Ç React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ"""
    frontend_dir = Path("frontend")
    build_dir = frontend_dir / "build"
    
    if not build_dir.exists():
        print("üî® –°–±–æ—Ä–∫–∞ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        os.chdir(frontend_dir)
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        subprocess.run(["npm", "install"], check=True)
        
        # –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        subprocess.run(["npm", "run", "build"], check=True)
        
        os.chdir("..")
        print("‚úÖ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–±–∏—Ä–∞–µ–º frontend –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
build_frontend()

# –ú–æ–Ω—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã React
frontend_build = Path("frontend/build")
if frontend_build.exists():
    app.mount("/static", StaticFiles(directory=str(frontend_build / "static")), name="static")
    
    @app.get("/")
    async def serve_frontend():
        """–û—Ç–¥–∞–µ—Ç –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É React"""
        return FileResponse(str(frontend_build / "index.html"))
    
    @app.get("/{path:path}")
    async def serve_frontend_routes(path: str):
        """–û—Ç–¥–∞–µ—Ç React —Ä–æ—É—Ç—ã (SPA routing)"""
        file_path = frontend_build / path
        if file_path.is_file():
            return FileResponse(str(file_path))
        else:
            # –î–ª—è SPA —Ä–æ—É—Ç–∏–Ω–≥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º index.html
            return FileResponse(str(frontend_build / "index.html"))

@app.get("/health")
async def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"""
    return {"status": "healthy", "service": "–£—Ä–æ–∫–∏ –ò—Å–ª–∞–º–∞"}

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 3000))
    print(f"üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    uvicorn.run(app, host="0.0.0.0", port=port)